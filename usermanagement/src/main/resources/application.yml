server:
  port: 8080

spring:
  application:
    name: usermanagement
  
jwt:
  header: Authorization
  headerPrefix: Bearer
  secret: ${JWT_SECRET_KEY}
  expiration: 3600000

app:
  token:
    email:
      verification:
        duration: 3600000
    password:
      reset:
        duration: 3600000
    refresh:
      duration: 2592000000
  velocity:
    templates:
      location: /templates/
  cache:
    logoutToken:
      maxSize: 1000

springdoc:
  swagger-ui:
    path: /swagger-ui
  api-docs:
    path: /v3/api-docs

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
---

spring:
  profiles: default
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password: 
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  data:
    redis:
      host: localhost
      port: 6379

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: usermanagement
          destination: multiagentbaseddevelopersupportsystem
          contentType: application/json
        event-out:
          destination: multiagentbaseddevelopersupportsystem
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8082

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: usermanagement
          destination: multiagentbaseddevelopersupportsystem
          contentType: application/json
        event-out:
          destination: multiagentbaseddevelopersupportsystem
          contentType: application/json


